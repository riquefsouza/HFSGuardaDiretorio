# This file has been generated by the GUI designer. Do not modify.
module HFSGuardaDiretorio.gui
	class FrmCadExtensao
		def initialize()
		end

		def Build()
			Stetic.Gui.Initialize(self)
			# Widget HFSGuardaDiretorio.gui.FrmCadExtensao
			self.@UIManager = Gtk.UIManager.new()
			w1 = Gtk.ActionGroup.new("Default")
			self.@ExtensaoAction = Gtk.Action.new("ExtensaoAction", Mono.Unix.Catalog.GetString("Extensão"), nil, nil)
			self.@ExtensaoAction.ShortLabel = Mono.Unix.Catalog.GetString("Extensão")
			w1.Add(self.@ExtensaoAction, nil)
			self.@IncluirExtensoAction = Gtk.Action.new("IncluirExtensoAction", Mono.Unix.Catalog.GetString("Incluir Extensão"), nil, nil)
			self.@IncluirExtensoAction.ShortLabel = Mono.Unix.Catalog.GetString("Incluir Extensão")
			w1.Add(self.@IncluirExtensoAction, nil)
			self.@ExcluirExtensaoAction = Gtk.Action.new("ExcluirExtensaoAction", Mono.Unix.Catalog.GetString("Excluir Extensão"), nil, nil)
			self.@ExcluirExtensaoAction.ShortLabel = Mono.Unix.Catalog.GetString("Excluir Extensão")
			w1.Add(self.@ExcluirExtensaoAction, nil)
			self.@ExcluirTodasExtensoesAction = Gtk.Action.new("ExcluirTodasExtensoesAction", Mono.Unix.Catalog.GetString("Excluir Todas Extensões"), nil, nil)
			self.@ExcluirTodasExtensoesAction.ShortLabel = Mono.Unix.Catalog.GetString("Excluir Todas Extensões")
			w1.Add(self.@ExcluirTodasExtensoesAction, nil)
			self.@ExportarTodosAction = Gtk.Action.new("ExportarTodosAction", Mono.Unix.Catalog.GetString("Exportar Todos"), nil, nil)
			self.@ExportarTodosAction.ShortLabel = Mono.Unix.Catalog.GetString("Exportar Todos")
			w1.Add(self.@ExportarTodosAction, nil)
			self.@ExportarParaBitmapAction = Gtk.Action.new("ExportarParaBitmapAction", Mono.Unix.Catalog.GetString("Exportar para Bitmap"), nil, nil)
			self.@ExportarParaBitmapAction.ShortLabel = Mono.Unix.Catalog.GetString("Exportar para Bitmap")
			w1.Add(self.@ExportarParaBitmapAction, nil)
			self.@ExportarParaIConeAction = Gtk.Action.new("ExportarParaIConeAction", Mono.Unix.Catalog.GetString("Exportar para Ícone"), nil, nil)
			self.@ExportarParaIConeAction.ShortLabel = Mono.Unix.Catalog.GetString("Exportar para Ícone")
			w1.Add(self.@ExportarParaIConeAction, nil)
			self.@ExportarParaGIFAction = Gtk.Action.new("ExportarParaGIFAction", Mono.Unix.Catalog.GetString("Exportar para GIF"), nil, nil)
			self.@ExportarParaGIFAction.ShortLabel = Mono.Unix.Catalog.GetString("Exportar para GIF")
			w1.Add(self.@ExportarParaGIFAction, nil)
			self.@ExportarParaJPEGAction = Gtk.Action.new("ExportarParaJPEGAction", Mono.Unix.Catalog.GetString("Exportar para JPEG"), nil, nil)
			self.@ExportarParaJPEGAction.ShortLabel = Mono.Unix.Catalog.GetString("Exportar para JPEG")
			w1.Add(self.@ExportarParaJPEGAction, nil)
			self.@ExportarParaPNGAction = Gtk.Action.new("ExportarParaPNGAction", Mono.Unix.Catalog.GetString("Exportar para PNG"), nil, nil)
			self.@ExportarParaPNGAction.ShortLabel = Mono.Unix.Catalog.GetString("Exportar para PNG")
			w1.Add(self.@ExportarParaPNGAction, nil)
			self.@ExportarParaTIFFAction = Gtk.Action.new("ExportarParaTIFFAction", Mono.Unix.Catalog.GetString("Exportar para TIFF"), nil, nil)
			self.@ExportarParaTIFFAction.ShortLabel = Mono.Unix.Catalog.GetString("Exportar para TIFF")
			w1.Add(self.@ExportarParaTIFFAction, nil)
			self.@ImportarTodosAction = Gtk.Action.new("ImportarTodosAction", Mono.Unix.Catalog.GetString("Importar Todos"), nil, nil)
			self.@ImportarTodosAction.ShortLabel = Mono.Unix.Catalog.GetString("Importar Todos")
			w1.Add(self.@ImportarTodosAction, nil)
			self.@ImportarIconesDosArquivosAction = Gtk.Action.new("ImportarIconesDosArquivosAction", Mono.Unix.Catalog.GetString("Importar Ícones dos Arquivos"), nil, nil)
			self.@ImportarIconesDosArquivosAction.ShortLabel = Mono.Unix.Catalog.GetString("Importar Ícones dos Arquivos")
			w1.Add(self.@ImportarIconesDosArquivosAction, nil)
			self.@ExtrairIconesDosArquivosAction = Gtk.Action.new("ExtrairIconesDosArquivosAction", Mono.Unix.Catalog.GetString("Extrair Ícones dos Arquivos"), nil, nil)
			self.@ExtrairIconesDosArquivosAction.ShortLabel = Mono.Unix.Catalog.GetString("Extrair Ícones dos Arquivos")
			w1.Add(self.@ExtrairIconesDosArquivosAction, nil)
			self.@UIManager.InsertActionGroup(w1, 0)
			self.AddAccelGroup(self.@UIManager.AccelGroup)
			self.@WidthRequest = 286
			self.@HeightRequest = 418
			self.@Name = "HFSGuardaDiretorio.gui.FrmCadExtensao"
			self.@Title = Mono.Unix.Catalog.GetString("Cadastro de Extensão de Arquivo")
			self.@WindowPosition = ((1))
			self.@Modal = true
			self.@Resizable = false
			self.@AllowGrow = false
			# Internal child HFSGuardaDiretorio.gui.FrmCadExtensao.VBox
			w2 = self.@VBox
			w2.Name = "dialog1_VBox"
			w2.BorderWidth = ((2))
			# Container child dialog1_VBox.Gtk.Box+BoxChild
			self.@vbox3 = Gtk.VBox.new()
			self.@vbox3.Name = "vbox3"
			self.@vbox3.Spacing = 6
			# Container child vbox3.Gtk.Box+BoxChild
			self.@UIManager.AddUiFromString(@"<ui><menubar name='menubar1'><menu name='ExtensaoAction' action='ExtensaoAction'><menuitem name='IncluirExtensoAction' action='IncluirExtensoAction'/><menuitem name='ExcluirExtensaoAction' action='ExcluirExtensaoAction'/><menuitem name='ExcluirTodasExtensoesAction' action='ExcluirTodasExtensoesAction'/></menu><menu name='ExportarTodosAction' action='ExportarTodosAction'><menuitem name='ExportarParaBitmapAction' action='ExportarParaBitmapAction'/><menuitem name='ExportarParaIConeAction' action='ExportarParaIConeAction'/><menuitem name='ExportarParaGIFAction' action='ExportarParaGIFAction'/><menuitem name='ExportarParaJPEGAction' action='ExportarParaJPEGAction'/><menuitem name='ExportarParaPNGAction' action='ExportarParaPNGAction'/><menuitem name='ExportarParaTIFFAction' action='ExportarParaTIFFAction'/></menu><menu name='ImportarTodosAction' action='ImportarTodosAction'><menuitem name='ImportarIconesDosArquivosAction' action='ImportarIconesDosArquivosAction'/><menuitem name='ExtrairIconesDosArquivosAction' action='ExtrairIconesDosArquivosAction'/></menu></menubar></ui>")
			self.@menubar1 = ((self.@UIManager.GetWidget("/menubar1")))
			self.@menubar1.Name = "menubar1"
			self.@vbox3.Add(self.@menubar1)
			w3 = ((self.@vbox3[self.@menubar1]))
			w3.Position = 0
			w3.Expand = false
			w3.Fill = false
			# Container child vbox3.Gtk.Box+BoxChild
			self.@GtkScrolledWindow = Gtk.ScrolledWindow.new()
			self.@GtkScrolledWindow.Name = "GtkScrolledWindow"
			self.@GtkScrolledWindow.ShadowType = ((1))
			# Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			self.@tabelaExtensao = Gtk.NodeView.new()
			self.@tabelaExtensao.CanFocus = true
			self.@tabelaExtensao.Name = "tabelaExtensao"
			self.@GtkScrolledWindow.Add(self.@tabelaExtensao)
			self.@vbox3.Add(self.@GtkScrolledWindow)
			w5 = ((self.@vbox3[self.@GtkScrolledWindow]))
			w5.Position = 1
			w2.Add(self.@vbox3)
			w6 = ((w2[self.@vbox3]))
			w6.Position = 0
			# Internal child HFSGuardaDiretorio.gui.FrmCadExtensao.ActionArea
			w7 = self.@ActionArea
			w7.Name = "dialog1_ActionArea"
			w7.Spacing = 10
			w7.BorderWidth = ((5))
			w7.LayoutStyle = ((1))
			# Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			self.@btnIncluir = Gtk.Button.new()
			self.@btnIncluir.CanDefault = true
			self.@btnIncluir.CanFocus = true
			self.@btnIncluir.Name = "btnIncluir"
			self.@btnIncluir.UseUnderline = true
			self.@btnIncluir.Label = Mono.Unix.Catalog.GetString("_Incluir")
			self.AddActionWidget(self.@btnIncluir, 0)
			w8 = ((w7[self.@btnIncluir]))
			w8.Expand = false
			w8.Fill = false
			# Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			self.@btnExcluir = Gtk.Button.new()
			self.@btnExcluir.CanDefault = true
			self.@btnExcluir.CanFocus = true
			self.@btnExcluir.Name = "btnExcluir"
			self.@btnExcluir.UseUnderline = true
			self.@btnExcluir.Label = Mono.Unix.Catalog.GetString("_Excluir")
			self.AddActionWidget(self.@btnExcluir, 0)
			w9 = ((w7[self.@btnExcluir]))
			w9.Position = 1
			w9.Expand = false
			w9.Fill = false
			if (self.@Child != nil) then
				self.@Child.ShowAll()
			end
			self.@DefaultWidth = 400
			self.@DefaultHeight = 418
			self.Show()
			self.@IncluirExtensoAction.Activated { |sender, e| self.@OnIncluirExtensaoActionActivated(sender, e) }
			self.@ExcluirExtensaoAction.Activated { |sender, e| self.@OnExcluirExtensaoActionActivated(sender, e) }
			self.@ExcluirTodasExtensoesAction.Activated { |sender, e| self.@OnExcluirTodasExtensoesActionActivated(sender, e) }
			self.@ExportarParaBitmapAction.Activated { |sender, e| self.@OnExportarParaBitmapActionActivated(sender, e) }
			self.@ExportarParaIConeAction.Activated { |sender, e| self.@OnExportarParaIConeActionActivated(sender, e) }
			self.@ExportarParaGIFAction.Activated { |sender, e| self.@OnExportarParaGIFActionActivated(sender, e) }
			self.@ExportarParaJPEGAction.Activated { |sender, e| self.@OnExportarParaJPEGActionActivated(sender, e) }
			self.@ExportarParaPNGAction.Activated { |sender, e| self.@OnExportarParaPNGActionActivated(sender, e) }
			self.@ExportarParaTIFFAction.Activated { |sender, e| self.@OnExportarParaTIFFActionActivated(sender, e) }
			self.@ImportarIconesDosArquivosAction.Activated { |sender, e| self.@OnImportarIconesDosArquivosActionActivated(sender, e) }
			self.@ExtrairIconesDosArquivosAction.Activated { |sender, e| self.@OnExtrairIconesDosArquivosActionActivated(sender, e) }
			self.@btnIncluir.Clicked { |sender, e| self.@OnBtnIncluirClicked(sender, e) }
			self.@btnExcluir.Clicked { |sender, e| self.@OnBtnExcluirClicked(sender, e) }
		end
	end
end