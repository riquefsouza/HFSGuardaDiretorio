# This file has been generated by the GUI designer. Do not modify.
module HFSGuardaDiretorio.gui
	class FrmPrincipal
		def initialize()
		end

		def Build()
			Stetic.Gui.Initialize(self)
			# Widget HFSGuardaDiretorio.gui.FrmPrincipal
			self.@UIManager = Gtk.UIManager.new()
			w1 = Gtk.ActionGroup.new("Default")
			self.@AbaAction = Gtk.Action.new("AbaAction", Mono.Unix.Catalog.GetString("Aba"), nil, nil)
			self.@AbaAction.ShortLabel = Mono.Unix.Catalog.GetString("Aba")
			w1.Add(self.@AbaAction, nil)
			self.@DiretorioAction = Gtk.Action.new("DiretorioAction", Mono.Unix.Catalog.GetString("Diretório"), nil, nil)
			self.@DiretorioAction.ShortLabel = Mono.Unix.Catalog.GetString("Diretório")
			w1.Add(self.@DiretorioAction, nil)
			self.@VisaoAction = Gtk.Action.new("VisaoAction", Mono.Unix.Catalog.GetString("Visão"), nil, nil)
			self.@VisaoAction.ShortLabel = Mono.Unix.Catalog.GetString("Visão")
			w1.Add(self.@VisaoAction, nil)
			self.@SobreAction = Gtk.Action.new("SobreAction", Mono.Unix.Catalog.GetString("Sobre"), nil, nil)
			self.@SobreAction.ShortLabel = Mono.Unix.Catalog.GetString("Sobre")
			w1.Add(self.@SobreAction, nil)
			self.@IncluirNovaAbaAction = Gtk.Action.new("IncluirNovaAbaAction", Mono.Unix.Catalog.GetString("Incluir Nova Aba"), nil, nil)
			self.@IncluirNovaAbaAction.ShortLabel = Mono.Unix.Catalog.GetString("Incluir Nova Aba")
			w1.Add(self.@IncluirNovaAbaAction, nil)
			self.@AlterarNomeDaAbaAtivaAction = Gtk.Action.new("AlterarNomeDaAbaAtivaAction", Mono.Unix.Catalog.GetString("Alterar Nome da Aba Ativa"), nil, nil)
			self.@AlterarNomeDaAbaAtivaAction.ShortLabel = Mono.Unix.Catalog.GetString("Alterar Nome da Aba Ativa")
			w1.Add(self.@AlterarNomeDaAbaAtivaAction, nil)
			self.@ExcluirAbaAtivaAction = Gtk.Action.new("ExcluirAbaAtivaAction", Mono.Unix.Catalog.GetString("Excluir Aba Ativa"), nil, nil)
			self.@ExcluirAbaAtivaAction.ShortLabel = Mono.Unix.Catalog.GetString("Excluir Aba Ativa")
			w1.Add(self.@ExcluirAbaAtivaAction, nil)
			self.@ImportarDiretorioAction = Gtk.Action.new("ImportarDiretorioAction", Mono.Unix.Catalog.GetString("Importar Diretório"), nil, nil)
			self.@ImportarDiretorioAction.ShortLabel = Mono.Unix.Catalog.GetString("Importar Diretório")
			w1.Add(self.@ImportarDiretorioAction, nil)
			self.@ImportarSubDiretoriosAction = Gtk.Action.new("ImportarSubDiretoriosAction", Mono.Unix.Catalog.GetString("Importar SubDiretórios"), nil, nil)
			self.@ImportarSubDiretoriosAction.ShortLabel = Mono.Unix.Catalog.GetString("Importar SubDiretórios")
			w1.Add(self.@ImportarSubDiretoriosAction, nil)
			self.@CompararDiretoriosAction = Gtk.Action.new("CompararDiretoriosAction", Mono.Unix.Catalog.GetString("Comparar Diretórios"), nil, nil)
			self.@CompararDiretoriosAction.ShortLabel = Mono.Unix.Catalog.GetString("Comparar Diretórios")
			w1.Add(self.@CompararDiretoriosAction, nil)
			self.@CadastrarExtensaoDeArquivoAction = Gtk.Action.new("CadastrarExtensaoDeArquivoAction", Mono.Unix.Catalog.GetString("Cadastrar Extensão de Arquivo"), nil, nil)
			self.@CadastrarExtensaoDeArquivoAction.ShortLabel = Mono.Unix.Catalog.GetString("Cadastrar Extensão de Arquivo")
			w1.Add(self.@CadastrarExtensaoDeArquivoAction, nil)
			self.@Action = Gtk.Action.new("Action", Mono.Unix.Catalog.GetString("-"), nil, nil)
			self.@Action.ShortLabel = Mono.Unix.Catalog.GetString("-")
			w1.Add(self.@Action, nil)
			self.@ExpandirDiretoriosAction = Gtk.Action.new("ExpandirDiretoriosAction", Mono.Unix.Catalog.GetString("Expandir Diretórios"), nil, nil)
			self.@ExpandirDiretoriosAction.ShortLabel = Mono.Unix.Catalog.GetString("Expandir Diretórios")
			w1.Add(self.@ExpandirDiretoriosAction, nil)
			self.@ColapsarDiretoriosAction = Gtk.Action.new("ColapsarDiretoriosAction", Mono.Unix.Catalog.GetString("Colapsar Diretórios"), nil, nil)
			self.@ColapsarDiretoriosAction.ShortLabel = Mono.Unix.Catalog.GetString("Colapsar Diretórios")
			w1.Add(self.@ColapsarDiretoriosAction, nil)
			self.@ExportarDiretoriosDaAbaAtivaAction = Gtk.Action.new("ExportarDiretoriosDaAbaAtivaAction", Mono.Unix.Catalog.GetString("Exportar Diretórios da Aba Ativa"), nil, nil)
			self.@ExportarDiretoriosDaAbaAtivaAction.ShortLabel = Mono.Unix.Catalog.GetString("Exportar Diretórios da Aba Ativa")
			w1.Add(self.@ExportarDiretoriosDaAbaAtivaAction, nil)
			self.@ImportarDiretoriosViaXMLAction = Gtk.Action.new("ImportarDiretoriosViaXMLAction", Mono.Unix.Catalog.GetString("Importar Diretórios via XML"), nil, nil)
			self.@ImportarDiretoriosViaXMLAction.ShortLabel = Mono.Unix.Catalog.GetString("Importar Diretórios via XML")
			w1.Add(self.@ImportarDiretoriosViaXMLAction, nil)
			self.@GravarLogDaImportacaoAction = Gtk.ToggleAction.new("GravarLogDaImportacaoAction", Mono.Unix.Catalog.GetString("Gravar Log da Importação"), nil, nil)
			self.@GravarLogDaImportacaoAction.ShortLabel = Mono.Unix.Catalog.GetString("Gravar Log da Importação")
			w1.Add(self.@GravarLogDaImportacaoAction, nil)
			self.@TXTAction = Gtk.Action.new("TXTAction", Mono.Unix.Catalog.GetString("TXT"), nil, nil)
			self.@TXTAction.ShortLabel = Mono.Unix.Catalog.GetString("TXT")
			w1.Add(self.@TXTAction, nil)
			self.@TXTAction1 = Gtk.Action.new("TXTAction1", Mono.Unix.Catalog.GetString("TXT"), nil, nil)
			self.@TXTAction1.ShortLabel = Mono.Unix.Catalog.GetString("TXT")
			w1.Add(self.@TXTAction1, nil)
			self.@CSVAction = Gtk.Action.new("CSVAction", Mono.Unix.Catalog.GetString("CSV"), nil, nil)
			self.@CSVAction.ShortLabel = Mono.Unix.Catalog.GetString("CSV")
			w1.Add(self.@CSVAction, nil)
			self.@HTMLAction = Gtk.Action.new("HTMLAction", Mono.Unix.Catalog.GetString("HTML"), nil, nil)
			self.@HTMLAction.ShortLabel = Mono.Unix.Catalog.GetString("HTML")
			w1.Add(self.@HTMLAction, nil)
			self.@XMLAction = Gtk.Action.new("XMLAction", Mono.Unix.Catalog.GetString("XML"), nil, nil)
			self.@XMLAction.ShortLabel = Mono.Unix.Catalog.GetString("XML")
			w1.Add(self.@XMLAction, nil)
			self.@SQLAction = Gtk.Action.new("SQLAction", Mono.Unix.Catalog.GetString("SQL"), nil, nil)
			self.@SQLAction.ShortLabel = Mono.Unix.Catalog.GetString("SQL")
			w1.Add(self.@SQLAction, nil)
			self.@MostrarOcultarArvoreDirAbaAtivaAction = Gtk.Action.new("MostrarOcultarArvoreDirAbaAtivaAction", Mono.Unix.Catalog.GetString("Mostrar/Ocultar árvore de diretórios da Aba Ativa"), nil, nil)
			self.@MostrarOcultarArvoreDirAbaAtivaAction.ShortLabel = Mono.Unix.Catalog.GetString("Mostrar/Ocultar árvore de diretórios da Aba Ativa")
			w1.Add(self.@MostrarOcultarArvoreDirAbaAtivaAction, nil)
			self.@MostrarOcultarListaItensPesquisadosAction = Gtk.Action.new("MostrarOcultarListaItensPesquisadosAction", Mono.Unix.Catalog.GetString("Mostrar/Ocultar lista de itens pesquisados"), nil, nil)
			self.@MostrarOcultarListaItensPesquisadosAction.ShortLabel = Mono.Unix.Catalog.GetString("Mostrar/Ocultar lista de itens pesquisados")
			w1.Add(self.@MostrarOcultarListaItensPesquisadosAction, nil)
			self.@SobreOCatalogadorAction = Gtk.Action.new("SobreOCatalogadorAction", Mono.Unix.Catalog.GetString("Sobre o Catalogador"), nil, nil)
			self.@SobreOCatalogadorAction.ShortLabel = Mono.Unix.Catalog.GetString("Sobre o Catalogador")
			w1.Add(self.@SobreOCatalogadorAction, nil)
			self.@UIManager.InsertActionGroup(w1, 0)
			self.AddAccelGroup(self.@UIManager.AccelGroup)
			self.@WidthRequest = 900
			self.@HeightRequest = 500
			self.@Name = "HFSGuardaDiretorio.gui.FrmPrincipal"
			self.@Title = Mono.Unix.Catalog.GetString("HFSGuardaDiretorio 2.0 - Catalogador de Diretórios")
			self.@WindowPosition = ((1))
			self.@DefaultWidth = 900
			self.@DefaultHeight = 500
			# Container child HFSGuardaDiretorio.gui.FrmPrincipal.Gtk.Container+ContainerChild
			self.@vbox1 = Gtk.VBox.new()
			self.@vbox1.Name = "vbox1"
			self.@vbox1.Spacing = 6
			# Container child vbox1.Gtk.Box+BoxChild
			self.@UIManager.AddUiFromString("<ui><menubar name=\'barraMenu\'><menu name=\'AbaAction\' action=\'AbaAction\'><menuitem" + " name=\'IncluirNovaAbaAction\' action=\'IncluirNovaAbaAction\'/><menuitem name=\'Alte" + "rarNomeDaAbaAtivaAction\' action=\'AlterarNomeDaAbaAtivaAction\'/><menuitem name=\'E" + "xcluirAbaAtivaAction\' action=\'ExcluirAbaAtivaAction\'/></menu><menu name=\'Diretor" + "ioAction\' action=\'DiretorioAction\'><menuitem name=\'ImportarDiretorioAction\' acti" + "on=\'ImportarDiretorioAction\'/><menuitem name=\'ImportarSubDiretoriosAction\' actio" + "n=\'ImportarSubDiretoriosAction\'/><menuitem name=\'CompararDiretoriosAction\' actio" + "n=\'CompararDiretoriosAction\'/><menuitem name=\'CadastrarExtensaoDeArquivoAction\' " + "action=\'CadastrarExtensaoDeArquivoAction\'/><separator/><menuitem name=\'ExpandirD" + "iretoriosAction\' action=\'ExpandirDiretoriosAction\'/><menuitem name=\'ColapsarDire" + "toriosAction\' action=\'ColapsarDiretoriosAction\'/><menu name=\'ExportarDiretoriosD" + "aAbaAtivaAction\' action=\'ExportarDiretoriosDaAbaAtivaAction\'><menuitem name=\'TXT" + "Action1\' action=\'TXTAction1\'/><menuitem name=\'CSVAction\' action=\'CSVAction\'/><me" + "nuitem name=\'HTMLAction\' action=\'HTMLAction\'/><menuitem name=\'XMLAction\' action=" + "\'XMLAction\'/><menuitem name=\'SQLAction\' action=\'SQLAction\'/></menu><menuitem nam" + "e=\'ImportarDiretoriosViaXMLAction\' action=\'ImportarDiretoriosViaXMLAction\'/><men" + "uitem name=\'GravarLogDaImportacaoAction\' action=\'GravarLogDaImportacaoAction\'/><" + "/menu><menu name=\'VisaoAction\' action=\'VisaoAction\'><menuitem name=\'MostrarOcult" + "arArvoreDirAbaAtivaAction\' action=\'MostrarOcultarArvoreDirAbaAtivaAction\'/><menu" + "item name=\'MostrarOcultarListaItensPesquisadosAction\' action=\'MostrarOcultarList" + "aItensPesquisadosAction\'/></menu><menu name=\'SobreAction\' action=\'SobreAction\'><" + "menuitem name=\'SobreOCatalogadorAction\' action=\'SobreOCatalogadorAction\'/></menu" + "></menubar></ui>")
			self.@barraMenu = ((self.@UIManager.GetWidget("/barraMenu")))
			self.@barraMenu.Name = "barraMenu"
			self.@vbox1.Add(self.@barraMenu)
			w2 = ((self.@vbox1[self.@barraMenu]))
			w2.Position = 0
			w2.Expand = false
			w2.Fill = false
			# Container child vbox1.Gtk.Box+BoxChild
			self.@hbox1 = Gtk.HBox.new()
			self.@hbox1.Name = "hbox1"
			self.@hbox1.Spacing = 6
			# Container child hbox1.Gtk.Box+BoxChild
			self.@btnImportarDiretorio = Gtk.Button.new()
			self.@btnImportarDiretorio.CanFocus = true
			self.@btnImportarDiretorio.Name = "btnImportarDiretorio"
			self.@btnImportarDiretorio.UseUnderline = true
			self.@btnImportarDiretorio.Label = Mono.Unix.Catalog.GetString("Importar Diretório")
			self.@hbox1.Add(self.@btnImportarDiretorio)
			w3 = ((self.@hbox1[self.@btnImportarDiretorio]))
			w3.Position = 0
			w3.Expand = false
			w3.Fill = false
			# Container child hbox1.Gtk.Box+BoxChild
			self.@pb = Gtk.ProgressBar.new()
			self.@pb.Name = "pb"
			self.@hbox1.Add(self.@pb)
			w4 = ((self.@hbox1[self.@pb]))
			w4.Position = 1
			# Container child hbox1.Gtk.Box+BoxChild
			self.@edtPesquisa = Gtk.Entry.new()
			self.@edtPesquisa.CanFocus = true
			self.@edtPesquisa.Name = "edtPesquisa"
			self.@edtPesquisa.IsEditable = true
			self.@edtPesquisa.MaxLength = 255
			self.@edtPesquisa.InvisibleChar = '●'
			self.@hbox1.Add(self.@edtPesquisa)
			w5 = ((self.@hbox1[self.@edtPesquisa]))
			w5.Position = 2
			# Container child hbox1.Gtk.Box+BoxChild
			self.@btnPesquisa = Gtk.Button.new()
			self.@btnPesquisa.CanFocus = true
			self.@btnPesquisa.Name = "btnPesquisa"
			self.@btnPesquisa.UseUnderline = true
			self.@btnPesquisa.Label = Mono.Unix.Catalog.GetString("Pesquisar")
			self.@hbox1.Add(self.@btnPesquisa)
			w6 = ((self.@hbox1[self.@btnPesquisa]))
			w6.Position = 3
			w6.Expand = false
			w6.Fill = false
			self.@vbox1.Add(self.@hbox1)
			w7 = ((self.@vbox1[self.@hbox1]))
			w7.Position = 1
			w7.Expand = false
			w7.Fill = false
			# Container child vbox1.Gtk.Box+BoxChild
			self.@spPesquisa = Gtk.VPaned.new()
			self.@spPesquisa.CanFocus = true
			self.@spPesquisa.Name = "spPesquisa"
			self.@spPesquisa.Position = 1
			# Container child spPesquisa.Gtk.Paned+PanedChild
			self.@notebook1 = Gtk.Notebook.new()
			self.@notebook1.CanFocus = true
			self.@notebook1.Name = "notebook1"
			self.@notebook1.CurrentPage = 0
			self.@notebook1.Scrollable = true
			# Container child notebook1.Gtk.Notebook+NotebookChild
			self.@sp = Gtk.HPaned.new()
			self.@sp.CanFocus = true
			self.@sp.Name = "sp"
			self.@sp.Position = 1
			# Container child sp.Gtk.Paned+PanedChild
			self.@scrollArvore = Gtk.ScrolledWindow.new()
			self.@scrollArvore.Name = "scrollArvore"
			self.@scrollArvore.ShadowType = ((1))
			# Container child scrollArvore.Gtk.Container+ContainerChild
			self.@arvoreFixa = Gtk.TreeView.new()
			self.@arvoreFixa.CanFocus = true
			self.@arvoreFixa.Name = "arvoreFixa"
			self.@scrollArvore.Add(self.@arvoreFixa)
			self.@sp.Add(self.@scrollArvore)
			w9 = ((self.@sp[self.@scrollArvore]))
			w9.Resize = false
			# Container child sp.Gtk.Paned+PanedChild
			self.@scrollTabelaFixa = Gtk.ScrolledWindow.new()
			self.@scrollTabelaFixa.Name = "scrollTabelaFixa"
			self.@scrollTabelaFixa.ShadowType = ((1))
			# Container child scrollTabelaFixa.Gtk.Container+ContainerChild
			self.@tabelaFixa = Gtk.NodeView.new()
			self.@tabelaFixa.CanFocus = true
			self.@tabelaFixa.Name = "tabelaFixa"
			self.@scrollTabelaFixa.Add(self.@tabelaFixa)
			self.@sp.Add(self.@scrollTabelaFixa)
			self.@notebook1.Add(self.@sp)
			# Notebook tab
			self.@labAbaFixa = Gtk.Label.new()
			self.@labAbaFixa.Name = "labAbaFixa"
			self.@labAbaFixa.LabelProp = Mono.Unix.Catalog.GetString("DISCO1")
			self.@notebook1.SetTabLabel(self.@sp, self.@labAbaFixa)
			self.@labAbaFixa.ShowAll()
			self.@spPesquisa.Add(self.@notebook1)
			w13 = ((self.@spPesquisa[self.@notebook1]))
			w13.Resize = false
			# Container child spPesquisa.Gtk.Paned+PanedChild
			self.@scrollPesquisa = Gtk.ScrolledWindow.new()
			self.@scrollPesquisa.Name = "scrollPesquisa"
			self.@scrollPesquisa.ShadowType = ((1))
			# Container child scrollPesquisa.Gtk.Container+ContainerChild
			self.@tabelaPesquisa = Gtk.NodeView.new()
			self.@tabelaPesquisa.CanFocus = true
			self.@tabelaPesquisa.Name = "tabelaPesquisa"
			self.@scrollPesquisa.Add(self.@tabelaPesquisa)
			self.@spPesquisa.Add(self.@scrollPesquisa)
			self.@vbox1.Add(self.@spPesquisa)
			w16 = ((self.@vbox1[self.@spPesquisa]))
			w16.Position = 2
			# Container child vbox1.Gtk.Box+BoxChild
			self.@hbox2 = Gtk.HBox.new()
			self.@hbox2.Name = "hbox2"
			self.@hbox2.Spacing = 6
			# Container child hbox2.Gtk.Box+BoxChild
			self.@barraStatus1 = Gtk.Statusbar.new()
			self.@barraStatus1.Name = "barraStatus1"
			self.@barraStatus1.Spacing = 6
			self.@barraStatus1.HasResizeGrip = false
			self.@hbox2.Add(self.@barraStatus1)
			w17 = ((self.@hbox2[self.@barraStatus1]))
			w17.Position = 0
			w17.Expand = false
			# Container child hbox2.Gtk.Box+BoxChild
			self.@barraStatus2 = Gtk.Statusbar.new()
			self.@barraStatus2.Name = "barraStatus2"
			self.@barraStatus2.Spacing = 6
			self.@hbox2.Add(self.@barraStatus2)
			w18 = ((self.@hbox2[self.@barraStatus2]))
			w18.Position = 1
			self.@vbox1.Add(self.@hbox2)
			w19 = ((self.@vbox1[self.@hbox2]))
			w19.Position = 3
			w19.Expand = false
			w19.Fill = false
			self.Add(self.@vbox1)
			if (self.@Child != nil) then
				self.@Child.ShowAll()
			end
			self.Show()
			self.@DeleteEvent { |sender, a| self.@OnDeleteEvent(sender, a) }
			self.@IncluirNovaAbaAction.Activated { |sender, e| self.@OnIncluirNovaAbaActionActivated(sender, e) }
			self.@AlterarNomeDaAbaAtivaAction.Activated { |sender, e| self.@OnAlterarNomeDaAbaAtivaActionActivated(sender, e) }
			self.@ExcluirAbaAtivaAction.Activated { |sender, e| self.@OnExcluirAbaAtivaActionActivated(sender, e) }
			self.@ImportarDiretorioAction.Activated { |sender, e| self.@OnImportarDiretorioActionActivated(sender, e) }
			self.@ImportarSubDiretoriosAction.Activated { |sender, e| self.@OnImportarSubDiretoriosActionActivated(sender, e) }
			self.@CompararDiretoriosAction.Activated { |sender, e| self.@OnCompararDiretoriosActionActivated(sender, e) }
			self.@CadastrarExtensaoDeArquivoAction.Activated { |sender, e| self.@OnCadastrarExtensaoDeArquivoActionActivated(sender, e) }
			self.@ExpandirDiretoriosAction.Activated { |sender, e| self.@OnExpandirDiretoriosActionActivated(sender, e) }
			self.@ColapsarDiretoriosAction.Activated { |sender, e| self.@OnColapsarDiretoriosActionActivated(sender, e) }
			self.@ImportarDiretoriosViaXMLAction.Activated { |sender, e| self.@OnImportarDiretoriosViaXMLActionActivated(sender, e) }
			self.@TXTAction1.Activated { |sender, e| self.@OnTXTAction1Activated(sender, e) }
			self.@CSVAction.Activated { |sender, e| self.@OnCSVActionActivated(sender, e) }
			self.@HTMLAction.Activated { |sender, e| self.@OnHTMLActionActivated(sender, e) }
			self.@XMLAction.Activated { |sender, e| self.@OnXMLActionActivated(sender, e) }
			self.@SQLAction.Activated { |sender, e| self.@OnSQLActionActivated(sender, e) }
			self.@MostrarOcultarArvoreDirAbaAtivaAction.Activated { |sender, e| self.@OnMostrarOcultarArvoreDirAbaAtivaActionActivated(sender, e) }
			self.@MostrarOcultarListaItensPesquisadosAction.Activated { |sender, e| self.@OnMostrarOcultarListaItensPesquisadosActionActivated(sender, e) }
			self.@SobreOCatalogadorAction.Activated { |sender, e| self.@OnSobreOCatalogadorActionActivated(sender, e) }
			self.@btnImportarDiretorio.Clicked { |sender, e| self.@OnBtnImportarDiretorioClicked(sender, e) }
			self.@btnPesquisa.Clicked { |sender, e| self.@OnBtnPesquisaClicked(sender, e) }
			self.@arvoreFixa.RowExpanded { |o, args| self.@OnArvoreFixaRowExpanded(o, args) }
			self.@arvoreFixa.RowCollapsed { |o, args| self.@OnArvoreFixaRowCollapsed(o, args) }
			self.@arvoreFixa.ButtonReleaseEvent { |o, args| self.@OnArvoreFixaButtonReleaseEvent(o, args) }
			self.@tabelaFixa.RowActivated { |o, args| self.@OnTabelaFixaRowActivated(o, args) }
			self.@tabelaFixa.ButtonReleaseEvent { |o, args| self.@OnTabelaFixaButtonReleaseEvent(o, args) }
			self.@tabelaPesquisa.ButtonReleaseEvent { |o, args| self.@OnTabelaPesquisaButtonReleaseEvent(o, args) }
		end
	end
end